#lang racket
(define tolerance 0.0001)
(define (average x y) (/ (+ x y) 2))
(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (newline)
    (display guess)
    (let ((next (f guess)))
      (if (close-enough? guess next)
          next
          (try next))))
  (try first-guess))
(define (sqrt x)
 (fixed-point (lambda (y) (average y (/ x y)))  1.0))

(define (fi)
  (fixed-point (lambda (y) (+ 1 (/ 1 y)))
               1.0))
(fi)
