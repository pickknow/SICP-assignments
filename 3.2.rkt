#lang racket
(define (make-monitored f)
  (let ((account 0))
    (define (reset-count)
      (set! account 0)
      account)
    (define (dispatch m)
      (cond ((eq? m `how-many-calls?) account)
            ((eq? m `reset-count) (reset-count))
            (else
               (set! account (+ account 1))
               (f m))))
    dispatch))
(define s (make-monitored sqrt))
(s 100)
(s `how-many-calls?)
(s 100)
(s 100)
(s `how-many-calls?)